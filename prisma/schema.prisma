// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String
  google_access_token String? @default("")
  github_access_token String? @default("")
  github_avatar_url  String? @default("")
  slack_access_token String? @default("")
  slack_channel_id String? @default("")
  bio       String?  @default("")
  commits   Commit[] 
}

model Commit {
  id              Int           @id @default(autoincrement())
  repo            String
  branch          String
  status          String? @default("")
  commit_message  String? @default("")
  commit_desc     String? @default("")
  scheduled_time  DateTime @default(now())
  isSlack         Boolean @default(false)
  isForce         Boolean @default(false)
  
  files           changeFiles[] 

  userId          Int  
  user            User    @relation(fields: [userId], references: [id] )

  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model changeFiles {
  id        Int     @id @default(autoincrement())
  path      String?
  content   String?
  commitId  Int     
  commit    Commit  @relation(fields: [commitId], references: [id] , onDelete: Cascade)
}
